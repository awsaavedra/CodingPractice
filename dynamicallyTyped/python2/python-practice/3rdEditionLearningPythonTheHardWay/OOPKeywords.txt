class X(Y): 
  --> class named X that is-a Y (inheritance)
class X(object): 
  def __init__(self, J)

  -->Class x has-a function init that takes parameters self and J

class X(object):
  def M(self, J)

  -->class x is-a object that has-a method, M, that takes parameters self and J

foo = X()
  --> foo is assigned to an instance of class X  (???)

foo.M(J)
  -->From foo, the instance of the class X, get the function (method) M and call 
  --> it arguments (right term?) self and J

foo.K = Q
  --> From foo get "K" attribute and set it to "Q."

In each of these where you see X, Y, M, J, K, Q, and foo you can treat those 
like blank spots. For example I can also





write these sentences as:
 ***************Same as above try not to peak********************
1. "Make a class named ??? that is-a Y."
2. "class ??? has-a __init__ that takes self and ??? parameters."
3. "class ??? has-a function named ??? that takes self and ??? parameters."
4. "Set foo to an instance of class ???."
5. "From foo get the ??? function, and call it with self=??? and parameters ???."
6. "From foo get the ??? attribute and set it to ???."




